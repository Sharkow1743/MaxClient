name: Build and Release Executables

on:
    release:
        types: [created]

jobs:
    build:
        permissions:
            contents: write
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout repository code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: Install system dependencies (Linux)
              if: runner.os == 'Linux'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev

            - name: Install Python dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Build Executable with PyInstaller
              run: |
                  if ($env:RUNNER_OS -eq "Windows") {
                    pyinstaller --name "MaxClient" --onefile --windowed --hidden-import "tornado.web" --add-data "web;web" main.py
                  } else {
                    pyinstaller --name "MaxClient" --onefile --windowed --hidden-import "tornado.web" --add-data "web:web" main.py
                  }
              shell: pwsh

            - name: Prepare Artifacts for Release
              run: |
                  if ($env:RUNNER_OS -eq "Windows") {
                    echo "ASSET_PATH=./dist/MaxClient.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                    echo "ASSET_NAME=MaxClient-windows-${{ github.event.release.tag_name }}.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                  } elseif ($env:RUNNER_OS -eq "macOS") {
                    zip -r MaxClient-macos.zip ./dist/MaxClient.app
                    echo "ASSET_PATH=MaxClient-macos.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                    echo "ASSET_NAME=MaxClient-macos-${{ github.event.release.tag_name }}.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                  } else {
                    tar -czvf MaxClient-linux.tar.gz -C ./dist MaxClient
                    echo "ASSET_PATH=MaxClient-linux.tar.gz" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                    echo "ASSET_NAME=MaxClient-linux-${{ github.event.release.tag_name }}.tar.gz" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
                  }
              shell: pwsh

            - name: Upload Artifact to Release
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ${{ env.ASSET_PATH }}
                  asset_name: ${{ env.ASSET_NAME }}
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
